{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/ops2.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,EAAA,EAAA,IAAA,EAAA,CAAA;;;EAIA,UAAU,CAAC,GAAX,GAA4B,OAAO,CAAC;;EACpC,UAAU,CAAC,KAAX,GAA4B,OAAO,CAAC;;EACpC,CAAA,GAA4B,OAAA,CAAQ,OAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,YAAR;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,WAAR,EAR5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmDA,CAAC,CAAC,GAAG,CAAC,KAAN,CAAY,MAAA,QAAA,CAAA,CAAA;AACZ,QAAA,CAAA,EAAA,iBAAA,EAAA,WAAA,EAAA;IAAE,GAAA,CAAI,cAAJ,EAAoB,OAApB;IACA,EAAE,CAAC,EAAH,CAAM,UAAN,EAAkB,QAAA,CAAE,IAAF,CAAA;aAAY,GAAA,CAAI,cAAJ,EAAoB,IAApB;IAAZ,CAAlB;IACA,MAAM,EAAE,CAAC,IAAH,CAAQ,UAAR,EAAoB,CAAE,IAAF,EAAQ,MAAR,CAApB;IACN,GAAA,CAAI,cAAJ,EAAoB,wBAApB,EAAgD,EAAE,CAAC,SAAH,YAAwB,UAAU,CAAC,OAAnF;IACA,GAAA,CAAI,cAAJ,EAAoB,wBAApB,EAAgD,EAAE,CAAC,SAAH,YAAwB,UAAU,CAAC,GAAnF;IACA,EAAE,CAAC,EAAH,CAAM,UAAN,EAAkB,QAAA,CAAE,IAAF,CAAA;aAAY,GAAA,CAAI,cAAJ,EAAoB,IAApB;IAAZ,CAAlB;IACA,EAAE,CAAC,IAAH,CAAQ,UAAR,EAAoB,CAAE,CAAF,EAAK,CAAL,CAApB,EANF;;;;IAUE,CAAA,GAAI,QAAA,CAAC,CAAE,QAAF,CAAD,CAAA;aAAkB,CAAC,CAAC,GAAG,CAAC,YAAN,CAAmB,QAAnB;IAAlB,EAVN;;IAYE,EAAE,CAAC,EAAH,CAAM,gBAAN,EAAwB,cAAA,GAAiB,QAAA,CAAE,IAAF,CAAA;AAC3C,UAAA;MAAI,KAAA,GAAQ,IAAI,CAAC;MACb,CAAC,CAAC,GAAG,CAAC,YAAN,CAAmB,CAAC,CAAA,QAAA,CAApB,EAAgC,SAAhC;AACA,aAAO;IAHgC,CAAzC,EAZF;;IAiBE,EAAE,CAAC,EAAH,CAAM,YAAN,EAAoB,WAAA,GAAc,QAAA,CAAE,IAAF,CAAA;aAChC,GAAA,CAAI,cAAJ,EAAoB;QAAE,CAAA,EAAG,IAAI,CAAC,MAAM,CAAC,OAAjB;QAA0B,CAAA,EAAG,IAAI,CAAC,MAAM,CAAC;MAAzC,CAApB;IADgC,CAAlC;IAEA,EAAE,CAAC,EAAH,CAAM,mBAAN,EAA2B,iBAAA,GAAoB,QAAA,CAAE,IAAF,CAAA;aAC7C,GAAA,CAAI,cAAJ,EAAoB,mBAApB;IAD6C,CAA/C,EAnBF;;;;;;;IA2BE,EAAE,CAAC,aAAH,CAAiB,CAAC,CAAA,eAAA,CAAlB,EAAqC,OAArC,EAA8C,gBAA9C,EA3BF;;IA6BE,EAAE,CAAC,aAAH,CAAiB,OAAjB,EAA0B,mBAA1B,EA7BF;;;AAgCE,WAAO;EAjCG,CAAZ;AAnDA",
  "sourcesContent": [
    "\n'use strict'\n\n\n#===========================================================================================================\nglobalThis.log            = console.log\nglobalThis.debug          = console.debug\nµ                         = require 'mudom'\nLINE                      = require 'linefinder'\nIT                        = require 'intertalk'\n# Intertalk Note Results Datom isa validate isa_optional validate_optional\n\n\n\n\n# _Distributor = LINE.Distributor\n\n# LINE.Distributor = class extends _Distributor\n\n#   constructor: ( cfg ) ->\n#     super cfg\n#     @rightcomb = µ.DOM.parse_one '<mu-rightcomb></mu-rightcomb>'\n#     log '^342234^', \"Distributor\", @rightcomb\n#     return undefined\n\n\n# #===========================================================================================================\n# µ.DOM.ready ->\n#   log '^ops2@123-1^', \"ready\"\n#   cfg   =\n#     paragraph_selector:         'mu-galley > p'\n#     iframe_selector:            'iframe'\n#     insert_stylesheet_after:    'link[href$=\"reset.css\"]'\n#     insert_debug_button:        true\n#     insert_paginate_button:     true\n#   #.........................................................................................................\n#   if ( not µ.DOM.page_is_inside_iframe() ) and ( µ.DOM.select_first 'mu-galley', null )?\n#     log '^ops2@123-2^', \"galley page, not inside an iframe\"\n#     distributor = new LINE.Distributor cfg\n#     await distributor.mark_lines()\n#     return null\n#   #.........................................................................................................\n#   return null unless  LINE.Distributor.is_main_document()\n#   #.........................................................................................................\n#   distributor = new LINE.Distributor cfg\n#   # await distributor.distribute_lines()\n#   ### TAINT to be done in `linefinder` ###\n#   # globalThis.ws = new ( require 'intersock' ).Intersock()\n#   return null\n\n\n#===========================================================================================================\nµ.DOM.ready ->\n  log '^ops2@123-3^', \"ready\"\n  IT.on 'whatever', ( note ) -> log '^ops2@123-4^', note\n  await IT.emit 'whatever', [ 'my', 'data', ]\n  log '^ops2@123-5^', \"IT is using WeakMap:  \", ( IT.listeners instanceof globalThis.WeakMap )\n  log '^ops2@123-6^', \"IT is using Map:      \", ( IT.listeners instanceof globalThis.Map )\n  IT.on 'whatever', ( note ) -> log '^ops2@123-7^', note\n  IT.emit 'whatever', [ 1, 2, ]\n  #=========================================================================================================\n  ### this code has been put here as we still have to decide on a better place for it ###\n  #.........................................................................................................\n  $ = ([ selector ]) -> µ.DOM.select_first selector\n  #.........................................................................................................\n  IT.on 'spinner-toggle', spinner_toggle = ( note ) ->\n    event = note.$value\n    µ.DOM.toggle_class $'#spinner', 'visible'\n    return null\n  #.........................................................................................................\n  IT.on 'mous-moved', mouse_moved = ( note ) ->\n    log '^ops2@123-1^', { x: note.$value.clientX, y: note.$value.clientY, }\n  IT.on 'counter-increment', counter_increment = ( note ) ->\n    log '^ops2@123-1^', \"counter-increment\"\n  #.........................................................................................................\n    # on E[to is me and key is \"show\"] from #bus queue all\n    #   send E(to:me,key:\"toggle\") to #bus unless me matches .visible\n    # on E[to is me and key is \"hide\"] from #bus queue all\n    #   send E(to:me,key:\"toggle\") to #bus if me matches .visible\n  #.........................................................................................................\n  IT.emit_on_event $'#spinner-toggle', 'click', 'spinner-toggle'\n  # IT.emit_on_event 'click', 'spinner-toggle'\n  IT.emit_on_event 'click', 'counter-increment'\n  # IT.emit_on_event 'mousemove', 'mous-moved'\n  #=========================================================================================================\n  return null\n\n\n\n\n"
  ]
}